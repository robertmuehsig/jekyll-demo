{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core is... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":44,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6601778984","Type":"IssuesEvent","CreatedAt":"2017-09-18T04:01:18","Actor":"ahdung","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2201","RelatedDescription":"Opened issue \"dotnet xxx.dll --urls not work\" (#2201) at aspnet/Home","RelatedBody":"Env: win2k8r2, VS2017, dotnet core 2.0\r\n![1](https://user-images.githubusercontent.com/12094247/30528805-e84141d8-9c68-11e7-8b11-839c68106bab.png)\r\n"},{"Id":"6601157991","Type":"IssuesEvent","CreatedAt":"2017-09-17T20:55:37","Actor":"dazinator","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2200","RelatedDescription":"Closed issue \"[Question] - Support Asp.net core 1 and asp.net core 2 in single package?\" (#2200) at aspnet/Home","RelatedBody":"Am I correct in thinking it's not currently possible to build a nuget package, that scopes its dependencies to the version of asp.net core being consumed in an application? For example if the nuget package is installed into an asp.net core 1.0 application it carries one set of dependencies, if its being installed into an asp.net core 1.1 application it carries another?\r\n\r\nI know you can target tfm's but this doesn't really equate to asp.net core versions. For example you can have an aspnet core 1.0 application that targets `net46`.\r\n\r\nIf that is correct, is there anything in the pipeline that could help enable this?\r\n\r\nThe scenario is you want to develop a package that supports asp.net core 1.0, 1.1 and 2.0 but you don't want to have to have `Foo.Package.AspNetCore1` `Foo.Package.AspNetCore11` and `Foo.Package.AspNetCore20` because this is pain for both developers and consumers (when consumers upgrade their projects accross asp.net versions they have to locate and consume entirely new packages).\r\n"},{"Id":"6600847440","Type":"IssuesEvent","CreatedAt":"2017-09-17T17:14:12","Actor":"dazinator","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2200","RelatedDescription":"Opened issue \"[Question] - Support Asp.net core 1 and asp.net core 2 in single package?\" (#2200) at aspnet/Home","RelatedBody":"Am I correct in thinking it's not currently possible to build a nuget package, that scopes its dependencies to the version of asp.net core being used in an application? For example if the nuget package is installed into an application using asp.net core 1.0 it carries one set of dependencies, if its being installed into an asp.net core 1.1 application it carries another?\r\n\r\nIf that is correct, is there anything in the pipeline that could help enable this?\r\n\r\nThe scenario is you want to develop a package that supports asp.net core 1.0, 1.1 and 2.0 but you don't want to have to have `Foo.Package.AspNetCore1` Foo.Package.AspNetCore11` and `Foo.Package.AspNetCore20` because this is pain for both developers and consumers (when consumers upgrade their projects accross asp.net versions they have to locate and consume entirely new packages).\r\n"},{"Id":"6600062312","Type":"IssuesEvent","CreatedAt":"2017-09-17T06:13:49","Actor":"mohammad-hth","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2199","RelatedDescription":"Opened issue \"ASP NET Core 2 Could not load assembly of a class library project\" (#2199) at aspnet/Home","RelatedBody":"In my solution, I have two projects. One of them is `web` project and the other one is `Model` project. You can see my solution structure in below:\r\n\r\n![sln](https://user-images.githubusercontent.com/25346731/30518501-d429a106-9b94-11e7-8570-ee466b51d03b.png)\r\n\r\nNow when I wanna run `Add-Migration` command in `Model Project` I get the following error message:\r\n\r\n> Could not load assembly 'ContosoUniversity.Model'. Ensure it is referenced by the startup project 'ContosoUniversity'.\r\n\r\n\r\nI remove `ContosoUniversity.Model` reference from `ContosoUniversity` web project and add it again but I still get the same error.\r\n\r\nI use ASP NET Core 2 and VS17.\r\n\r\nHere is my `Startup.cs` class if you need it:\r\n\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration, IHostingEnvironment env)\r\n        {\r\n            Configuration = configuration;\r\n\r\n            var builder = new ConfigurationBuilder()\r\n            .SetBasePath(env.ContentRootPath)\r\n            .AddJsonFile(\"appsettings.json\", optional: true, reloadOnChange: true)\r\n            .AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true);\r\n\r\n            Configuration = builder.Build();\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddDbContext<SchoolContext>(option => \r\n                option.UseSqlServer(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n            services.AddMvc();\r\n\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseBrowserLink();\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n        }\r\n    }\r\n\r\n[you can see this question in stackoverflow\r\n](https://stackoverflow.com/questions/46261109/asp-net-core-2-could-not-load-assembly-of-a-class-library-project)\r\n\r\n\r\n"},{"Id":"6598604729","Type":"IssuesEvent","CreatedAt":"2017-09-16T07:59:07","Actor":"UrielMhezzek","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2198","RelatedDescription":"Opened issue \"Asp Core 2 Jwt Authentification\" (#2198) at aspnet/Home","RelatedBody":"Hello,\r\ni am still a newby in asp. i build a new asp core 2 app and want to implement jwt/bearer authentifications with microsoft identity framework. but i don't find hint to implement the last step. \r\n\r\nI add to my controller [Authorize(Policy = \"ApiUser\")]. if i send a message to my controller, i get the reason 404 Not found.\r\n\r\nhere ist my [Startup.txt](https://github.com/aspnet/Home/files/1308168/Startup.txt)\r\n\r\n"},{"Id":"6598171707","Type":"PullRequestEvent","CreatedAt":"2017-09-16T01:06:27","Actor":"jkotalik","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/pull/2197","RelatedDescription":"Opened pull request \"[WIP] Update contributing information to be more chronological\" (#2197) at aspnet/Home","RelatedBody":"As discussed, I believe that the contributing section should be laid out in chronological order from \"I see a fix I would like to make\" to merging a pull request.\r\n@natemcmaster @Eilon @davidfowl "}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6601924494","Type":"PullRequestEvent","CreatedAt":"2017-09-18T05:28:12","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/787","RelatedDescription":"Closed pull request \"Others - Question\" (#787) at aspnet/SignalR","RelatedBody":"This is really just a question in the form of a PR (with a test ...)\r\nI was looking into how to implement the others client subset and I realized that I wasn't actually sure how to implement it without passing in the callers connection Id at the hub level which is just not right.  This pr also kind of shows the need for an improved API for the AllExcept subset, aka it should use params to make it more friendly for people to enter one or two id's to exclude. \r\nAnyways, was hoping for some guidance on this. Thanks!\r\n\r\nThis isn't alpha work so super lo pri, but I just thought I'd put it out there\r\n"},{"Id":"6601538430","Type":"IssuesEvent","CreatedAt":"2017-09-18T01:45:07","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/903","RelatedDescription":"Opened issue \"Support Server -> Client ACKs for single clients\" (#903) at aspnet/SignalR","RelatedBody":"Support server to clients acks so that reliable messaging can be implemented more easily. This would only be when using `Clients.Client()`. I think we should go back to the SendAsync (fire and forget) InvokeAsync (wait for ack) naming pattern. That's the one sticking point."},{"Id":"6600077945","Type":"PullRequestEvent","CreatedAt":"2017-09-17T06:30:55","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/902","RelatedDescription":"Opened pull request \"Turned Stream into StreamAsync\" (#902) at aspnet/SignalR","RelatedBody":"- Before we were fire and forgetting the invocation that initiated\r\nthe streaming, this changes that so that the caller now has to await\r\nto get the channel.\r\n\r\n#899"},{"Id":"6599622864","Type":"IssuesEvent","CreatedAt":"2017-09-16T22:22:16","Actor":"FailHair","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/901","RelatedDescription":"Closed issue \"Can't send message directly to a connectionId\" (#901) at aspnet/SignalR","RelatedBody":"I'm trying to send a specific message to a specific user using its `connectionId`. But the message never arrives at the client. The JS code is never called. I do this with the following code:\r\n```\r\n// message.ConnectionId = the connectionId of the \"user\" I want to send the message to.\r\nawait Clients.User(message.ConnectionId).InvokeAsync(\"DirectChat\", new[] { message.Text });\r\n```\r\nnote: I've been sure, with a breakpoint, that `message.ConnectionId` contains the correct value.\r\n\r\nWhen I change that line to this:\r\n\r\n```\r\nawait Clients.All.InvokeAsync(\"DirectChat\", new[] { message.Text });\r\n```\r\n\r\nThen it all works. But obviously then everyone receives the message, which I don't want.\r\n\r\nSo I'm either doing something wrong or there exists a bug when trying to send a message directly to a `connectionId`. Is there a way to solve this issue?\r\n\r\nI'm currently using `SignalR 1.0.0-alpha2-27024`."},{"Id":"6599157807","Type":"IssuesEvent","CreatedAt":"2017-09-16T16:07:53","Actor":"FailHair","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/901","RelatedDescription":"Opened issue \"Can't send message directly to a connectionId\" (#901) at aspnet/SignalR","RelatedBody":"I'm trying to send a specific message to a specific user using its `connectionId`. But the message never arrives at the client. The JS code is never called. I do this with the following code:\r\n```\r\n// message.ConnectionId = the connectionId of the \"user\" I want to send the message to.\r\nawait Clients.User(message.ConnectionId).InvokeAsync(\"DirectChat\", new[] { message.Text });\r\n```\r\nnote: I've been sure, with a breakpoint, that `message.ConnectionId` contains the correct value.\r\n\r\nWhen I change that line to this:\r\n\r\n```\r\nawait Clients.All.InvokeAsync(\"DirectChat\", new[] { message.Text });\r\n```\r\n\r\nThen it all works. But obviously then everyone receives the message, which I don't want.\r\n\r\nSo I'm either doing something wrong or there exists a bug when trying to send a message directly to a `connectionId`. Is there a way to solve this issue?\r\n\r\nI'm currently using `SignalR 1.0.0-alpha2-27024`."},{"Id":"6598994978","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:05:48","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/900","RelatedDescription":"Opened issue \"New client side API design\" (#900) at aspnet/SignalR","RelatedBody":"I'm proposing a new client side API design to solve a bunch of issues:\r\n- https://github.com/aspnet/SignalR/issues/858\r\n- https://github.com/aspnet/SignalR/issues/842\r\n- https://github.com/aspnet/SignalR/issues/836\r\n- The fact that subscriptions cannot be removed once added\r\n- Passing state to callback to avoid closers\r\n\r\n```C#\r\npublic interface IConnection\r\n{\r\n    Task StartAsync();\r\n    Task DisposeAsync();\r\n    Task SendAsync(byte[] data, CancellationToken cancellationToken);\r\n\r\n    public CancellationToken ClosedToken { get; }\r\n\r\n    public IDisposable OnReceived(Func<byte[], Task, object> callback, object state);\r\n\r\n    IFeatureCollection Features { get; }\r\n}\r\n\r\npublic class HubConnection\r\n{\r\n    Task StartAsync();\r\n    Task DisposeAsync();\r\n    Task InvokeAsync(string method, params object[] args);\r\n    Task SendAsync(string method, params object[] args);\r\n\r\n    public CancellationToken ClosedToken { get; }\r\n\r\n    IDisposable On(string methodName, Type[] parameterTypes, Func<object[], Task, object> callback, object state);\r\n}\r\n```\r\n\r\n/cc @moozzyk "},{"Id":"6598990797","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:02:41","Actor":"A7medRamadan","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/899","RelatedDescription":"Opened issue \"Stream Method is asynchronous but without Async suffix \" (#899) at aspnet/SignalR","RelatedBody":"Stream Method is asynchronous but without Async suffix in its name, it should be StreamAsync \r\n\r\n"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6601784062","Type":"IssuesEvent","CreatedAt":"2017-09-18T04:04:15","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6833","RelatedDescription":"Reopened issue \"Publish fails in visual studio 2017.\" (#6833) at aspnet/Mvc","RelatedBody":"Hi,\r\nI want to publish an \"ASP.Net MVC Core 2.0\" project, which contains some library as references (They are not NuGets or projects). The project is working fine in the visual studio but it throws the following exception.\r\n\r\n```\r\n\tCannot find compilation library location for package 'Olive'\r\n     at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n     at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n     at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n     at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n     at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n     at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n     at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n     at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n     at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n     at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n     at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n     at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n     at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n     at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n     at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(RazorCodeDocument codeDocument)\r\n     at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(RazorProjectItem projectItem)\r\n     at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(String path)\r\n     at Microsoft.AspNetCore.Mvc.Razor.ViewCompilation.Internal.PrecompileRunCommand.<>c__DisplayClass23_0.<GenerateCode>b__0(Int32 i)\r\n     at System.Threading.Tasks.Parallel.<>c__DisplayClass19_0`1.<ForWorker>b__1(RangeWorker& currentWorker, Int32 timeout, Boolean& replicationDelegateYieldedBeforeCompletion)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Threading.Tasks.Parallel.<>c__DisplayClass19_0`1.<ForWorker>b__1(RangeWorker& currentWorker, Int32 timeout, Boolean& replicationDelegateYieldedBeforeCompletion)\r\n     at System.Threading.Tasks.TaskReplicator.Replica`1.ExecuteAction(Boolean& yieldedBeforeCompletion)\r\n     at System.Threading.Tasks.TaskReplicator.Replica.Execute()\r\n```"},{"Id":"6600081776","Type":"PullRequestEvent","CreatedAt":"2017-09-17T06:35:11","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6840","RelatedDescription":"Opened pull request \"Port to 2.0.1: Input fields don't emit (and thus round-trip) offset value when binding against DateTimeOffset fields\" (#6840) at aspnet/Mvc","RelatedBody":"Commits include cherry-pick of the original (dev) fix and enabling a new quirks mode for the patch. Have run all tests with new switch enabled and disabled."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6600273323","Type":"IssuesEvent","CreatedAt":"2017-09-17T09:44:26","Actor":"Ibro","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1418","RelatedDescription":"Closed issue \"Razor Pages - Based on Individual Auth template- weird login/register errors.\" (#1418) at aspnet/Identity","RelatedBody":"Using SDK 2.0.0\r\nMicrosoft.AspNetCore.All - 2.0.0\r\n\r\nOnly things I changed is DbContext and User/Role classes.\r\n\r\nWhen I register, it manages to create an account but fails during this line:\r\n\r\n`  var code = await _userManager.GenerateEmailConfirmationTokenAsync(user);`\r\n\r\nHere is the raw exception details: https://gist.github.com/Ibro/3587ab122aa82dbca8de889bd500e1e9\r\n\r\n\r\n\r\nOn login it fails on this line:\r\n`var result = await _signInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: true);`\r\n\r\n\r\nHere is the exception: https://gist.github.com/Ibro/70a2a4ce668b49c2344d95824aa8c710\r\n\r\nHere is my startup class\r\n\r\n```\r\npublic class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        private IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddDbContext<MyDbContext>(options =>\r\n                options.UseSqlServer(\"Server=.;Database=PagesSample;Trusted_Connection=True;\"));\r\n\r\n            services.AddIdentity<User, Role>()\r\n                .AddEntityFrameworkStores<MyDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services\r\n                .AddMvc()\r\n                .AddRazorPagesOptions(options =>\r\n                {\r\n                    options.Conventions.AuthorizeFolder(\"/Account/Manage\");\r\n                    options.Conventions.AuthorizePage(\"/Account/Logout\");\r\n                });\r\n\r\n     services.AddAuthentication().AddCookie();\r\n\r\n            services.AddSingleton<IEmailSender, EmailSender>();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            app.UseDeveloperExceptionPage();\r\n            app.UseDatabaseErrorPage();\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n        }\r\n    }\r\n```\r\n\r\n\r\nDb Context:\r\n\r\n```\r\npublic class MyDbContext : IdentityDbContext<User, Role, int>\r\n    {\r\n        public MyDbContext(DbContextOptions<MyDbContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n\r\n        public DbSet<Note> Notes { get; set; }\r\n        public DbSet<Tag> Tags { get; set; }\r\n        public DbSet<Category> Categories { get; set; }\r\n\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);\r\n\r\n            builder.Entity<User>().ToTable(nameof(Users));\r\n            builder.Entity<Role>().ToTable(nameof(Roles));\r\n            builder.Entity<IdentityRole<int>>().ToTable(\"UserRoles\");\r\n        }\r\n    }\r\n```\r\n\r\nUser class:\r\n```\r\npublic class User : IdentityUser<int>\r\n    {\r\n        public new int Id { get; set; }\r\n\r\n        public string FirstName { get; set; }\r\n        public string LastName { get; set; }\r\n\r\n        public List<Note> Notes { get; set; }\r\n    }\r\n```\r\n\r\nRole:\r\n```\r\npublic class Role : IdentityRole<int>\r\n    {\r\n    }\r\n```"},{"Id":"6598918744","Type":"IssuesEvent","CreatedAt":"2017-09-16T13:01:52","Actor":"chassq","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1430","RelatedDescription":"Closed issue \"No User available until cookie created?\" (#1430) at aspnet/Identity","RelatedBody":"\r\nWhen we run this call \r\n\r\n`var signInResult = await _signInManager.PasswordSignInAsync(login.LoginName, login.Password, login.RememberMe, true);`\r\n\r\nwe cannot seem to get to the HttpContext.User until after the Action Method completes and has returned. Is that correct?"},{"Id":"6598396387","Type":"IssuesEvent","CreatedAt":"2017-09-16T04:29:45","Actor":"saf-itpro","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1433","RelatedDescription":"Opened issue \"_emailSender.SendEmailAsync is returning Invalid Token validation message\" (#1433) at aspnet/Identity","RelatedBody":"App: **ASP.NET MVC Core 1.1.1 with Individual User Accounts\r\nIdentity Core\r\nEntity Framework Core\r\nVisual Studio 2017 ver 15.3.3**\r\n\r\nWhen clicking on `Forgot Password` link, the following code successfully sends an email with a generated link. Clicking on the link inside the email body correctly displays the `Reset Password` form.  But after entering login name, new password etc and clicking on Reset button, the validation error` Invalid Token` shows up.\r\n\r\n**Body of my Email that App sent**:\r\n\r\n    Please reset your password by clicking here: <a href='http://localhost/HPF/Account/ResetPassword?userId=1db73091-8098-4427-9a1a-1897dcabea90&code=CfDJ8IgLyyEqB6dPkvwFmW%2BJlPrg%2Fpz%2FiNTD442K1KoBG7MSx3zp6TFSY5w0Xj49cG87P%2BkGSWalD6YbbRlrLP4qAEORuoaHZM%2BMe0G08Y9EeUycbhNxx%2FpEv2z3sJ%2BMr4ZccLBO08iwlbIxBnXkJ5gu%2Bsnoo5FHAKysp85%2FrLdbS47smj%2Bt9kaaFA5DDBkzmR%2Bb0HTV2FL8CyjH2M1wCjLgcSC2Jg6BIcDAVUd7jEwxB8V9upAVh%2FR3FJCk2OAJU4w4Fg%3D%3D'>link</a>\r\n\r\nThe only difference between following code and the default code that `VS2017 `generates in `AccountController `is that we're not using Email attribute as a user name, we have changed\r\n```\r\n[Required]\r\n[EmailAddress]\r\npublic string Email { get; set; }\r\n```\r\nto\r\n\r\n```\r\n[Required]\r\npublic string UserName { get; set; }\r\n```\r\netc. etc., and have extended the user properties as follows:\r\n\r\n**ApplicationUser.cs**:\r\n\r\n```\r\n// Add profile data for application users by adding properties to the ApplicationUser class\r\npublic class ApplicationUser : IdentityUser\r\n{\r\n    public string UserFullName { get; set; }\r\n    [Column(TypeName = \"varchar(50)\")]\r\n    public string UserEmaill { get; set; } \r\n    [Column(TypeName = \"varchar(15)\")]\r\n    public string UserCity{ get; set; }\r\n}\r\n```\r\n\r\n**Controller**:\r\n\r\n    [HttpPost]\r\n    [AllowAnonymous]\r\n    [ValidateAntiForgeryToken]\r\n    public async Task<IActionResult> ForgotPassword(ForgotPasswordViewModel model)\r\n    {\r\n        if (ModelState.IsValid)\r\n        {\r\n            var user = await _userManager.FindByNameAsync(model.UserName);\r\n            string sUserEmail = user.UserEmail; //I Added this. Note the email is not the user name in my app\r\n            if (user == null)\r\n            {\r\n                // Don't reveal that the user does not exist or is not confirmed\r\n                return View(\"ForgotPasswordConfirmation\");\r\n            }\r\n    \r\n            // For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=532713\r\n            // Send an email with this link\r\n            var code = await _userManager.GeneratePasswordResetTokenAsync(user);\r\n            var callbackUrl = Url.Action(\"ResetPassword\", \"Account\", new { userId = user.Id, code = code }, protocol: HttpContext.Request.Scheme);\r\n            await _emailSender.SendEmailAsync(sUserEmail, \"Reset Password\", $\"Please reset your password by clicking here: <a href='{callbackUrl}'>link</a>\");\r\n            return View(\"ForgotPasswordConfirmation\");\r\n        }\r\n    \r\n        // If we got this far, something failed, redisplay form\r\n        return View(model);\r\n    }\r\n    \r\n    [HttpPost]\r\n    [AllowAnonymous]\r\n    [ValidateAntiForgeryToken]\r\n    public async Task<IActionResult> ResetPassword(ResetPasswordViewModel model)\r\n    {\r\n        if (!ModelState.IsValid)\r\n        {\r\n            return View(model);\r\n        }\r\n        var user = await _userManager.FindByNameAsync(model.UserName);\r\n        if (user == null)\r\n        {\r\n            // Don't reveal that the user does not exist\r\n            return RedirectToAction(nameof(AccountController.ResetPasswordConfirmation), \"Account\");\r\n        }\r\n        var result = await _userManager.ResetPasswordAsync(user, model.Code, model.Password);\r\n        if (result.Succeeded)\r\n        {\r\n            return RedirectToAction(nameof(AccountController.ResetPasswordConfirmation), \"Account\");\r\n        }\r\n        AddErrors(result);\r\n        return View();\r\n    }"},{"Id":"6598332199","Type":"PullRequestEvent","CreatedAt":"2017-09-16T03:27:59","Actor":"scottsauber","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1432","RelatedDescription":"Opened pull request \"XML doc comments changes\" (#1432) at aspnet/Identity","RelatedBody":"- Move defaults from remarks to summary for better intellisense.\r\n- Add summary to describe LockoutOptions AllowedForNewUsers.\r\n- Added defaults to xml docs where missing.\r\n\r\nFixes #1426 "},{"Id":"6597984906","Type":"PullRequestEvent","CreatedAt":"2017-09-15T23:13:57","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1431","RelatedDescription":"Opened pull request \"[2.0.1] Update version.props and add list of dependendencies that are also being updated\" (#1431) at aspnet/Identity","RelatedBody":"CI will fail until we actually have a candidate build of the EF dependencies.\r\n\r\n:watch: will wait until those are available to merge"},{"Id":"6596276005","Type":"IssuesEvent","CreatedAt":"2017-09-15T15:23:15","Actor":"chassq","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1430","RelatedDescription":"Opened issue \"No User available until cookie created?\" (#1430) at aspnet/Identity","RelatedBody":"\r\nWhen we run this call \r\n\r\n`var signInResult = await _signInManager.PasswordSignInAsync(login.LoginName, login.Password, login.RememberMe, true);`\r\n\r\nwe cannot seem to get to the HttpContext.User until after the Action Method completes and has returned. Is that correct?"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6601508971","Type":"IssuesEvent","CreatedAt":"2017-09-18T01:26:08","Actor":"vinhhrv","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2032","RelatedDescription":"Closed issue \"Kestrel Hangs\" (#2032) at aspnet/KestrelHttpServer","RelatedBody":"```\r\n\r\n(lldb) clrstack\r\nOS Thread Id: 0x10bd (19)\r\n        Child SP               IP Call Site\r\n00007F77F19A8BF0 00007f7cf6f106d5 [HelperMethodFrame: 00007f77f19a8bf0]\r\n00007F77F19A8D10 00007F7C7D88160D Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n00007F77F19A8D20 00007F7C7D88079F Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadResult ByRef)\r\n00007F77F19A8D60 00007F7C7D8806D1 Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\r\n00007F77F19A8DE0 00007F7C7D8853DD Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult()\r\n00007F77F19A8E00 00007F7C7CD00B6C Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvOutputConsumer+<WriteOutputAsync>d__6.MoveNext()\r\n00007F77F19A8F30 00007F7C7C151011 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007F77F19A8F80 00007F7C7D88C0D5 Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe+<>c.<.cctor>b__67_3(System.Object)\r\n00007F77F19A8F90 00007F7C7CD03B02 Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread+CallbackAdapter`1+<>c[[System.__Canon, System.Private.CoreLib]].<.cctor>b__3_0(System.Object, System.Object)\r\n00007F77F19A8FC0 00007F7C7CCF7F8D Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.DoPostWork()\r\n00007F77F19A9070 00007F7C7CCF7E4F Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.OnPost()\r\n00007F77F19A90A0 00007F7C7CCFBE87 Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvAsyncHandle.AsyncCb(IntPtr)\r\n00007F77F19A90B0 00007F7C7CD0383E Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvAsyncHandle+<>c.<.cctor>b__9_1(IntPtr)\r\n00007F77F19A90C0 00007F7C810460E9 DomainBoundILStubClass.IL_STUB_ReversePInvoke(Int64)\r\n00007F77F19AC7B8 00007f7cf58ecf6e [InlinedCallFrame: 00007f77f19ac7b8] Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions+NativeMethods.uv_run(Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle, Int32)\r\n00007F77F19AC7B8 00007f7c81045c6c [InlinedCallFrame: 00007f77f19ac7b8] Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions+NativeMethods.uv_run(Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle, Int32)\r\n00007F77F19AC7A0 00007F7C81045C6C DomainBoundILStubClass.IL_STUB_PInvoke(Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle, Int32)\r\n00007F77F19AC840 00007F7C7CCFB1A8 Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.run(Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvLoopHandle, Int32)\r\n00007F77F19AC860 00007F7C7CCF7BED Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvThread.ThreadStart(System.Object)\r\n00007F77F19AC8C0 00007F7C81515033 System.Threading.Thread.ThreadMain_ParameterizedThreadStart(System.Object)\r\n00007F77F19AC8E0 00007F7C7C151011 System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n00007F77F19ACC58 00007f7cf58ebf07 [GCFrame: 00007f77f19acc58]\r\n00007F77F19ACD30 00007f7cf58ebf07 [DebuggerU2MCatchHandlerFrame: 00007f77f19acd30]\r\n\r\n(lldb) sos Threads\r\nThreadCount:      58\r\nUnstartedThread:  0\r\nBackgroundThread: 54\r\nPendingThread:    0\r\nDeadThread:       2\r\nHosted Runtime:   no\r\n                                                                                                        Lock\r\n       ID OSID ThreadOBJ           State GC Mode     GC Alloc Context                  Domain           Count Apt Exception\r\n   3    1 10a8 00000000006E0370    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Finalizer)\r\n   1    2 10a6 00000000006E2CB0  2020020 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  10    3 10af 00000000006DEA00    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  11    4 10b0 0000000000923D30    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  12    5 10b3 00000000009E05E0    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  13    6 10b4 0000000000A2C680  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker) System.OperationCanceledException 00007f7841c36be0 (nested exceptions)\r\n  15    7 10b6 00007F7800004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  16    8 10b7 0000000000A4BB90    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  17    9 10b8 00007F77F8004BC0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  18   10 10b9 00007F77E00044F0  1020220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  19   11 10ba 00007F77F8006D50  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  21   12 10bc 0000000000A98050    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  19   13 10bd 0000000000A98C90    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException 00007f784201dab8\r\n  23   14 10be 00007F77E4009D10    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  24   15 10bf 00007F77F800BD00  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  25   16 10c0 00007F77E40327B0  2021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  26   18 10c2 00007F780007FA70  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn (Threadpool Worker)\r\n  27   19 10c3 00007F77F803EB30  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  28   20 10c4 00007F77C4004BC0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  29   21 10c5 00007F77B8004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  30   22 10c6 00007F77BC004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  31   23 10c7 00007F77B0004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn (Threadpool Worker)\r\n  32   24 10c8 00007F77B4004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  34   25 10ca 00007F77A8004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  33   26 10c9 00007F77A0004BC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  35   27 10cb 0000000000A47F80  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  36   28 10cc 00007F77A000ABC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  37   29 10cd 00007F77A800ABC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  38   32 10d4 00007F781C0044F0    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  39   33 10d5 00007F781C0060E0    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  40   34 10d6 00007F781C008050    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  41   35 10d7 00007F781C00A030    21220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n  42   37 10dd 00007F7800081B80    21020 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn\r\n  43   30 10e6 00007F77E010D790  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  44   38 10e8 00007F77A0080DA0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  45   17 10ec 00007F77D40A73C0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  46   31 1116 00007F77B0055E20  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  47   42 1117 00007F77B004D620  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  48   41 1118 00007F77C403C1B0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  49   36 1119 00007F77C003C020  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  50   40 111a 00007F7C6C00BF20  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  51   45 111b 00007F77E010E670  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  52   47 111d 00007F781000C7B0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker) System.OperationCanceledException 00007f78412b0230 (nested exceptions)\r\n  53   48 111e 00007F77E8025250  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  54   49 111f 00007F77D41115A0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  55   50 1120 00007F77F80335E0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  56   51 1121 00007F77C0040540  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  57   52 1122 0000000000A951C0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  58   53 1123 00007F77C40404F0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  59   43 1128 00007F77A80A9EC0  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  60   39 1153 000000000099B930  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker) System.OperationCanceledException 00007f7841bdc638 (nested exceptions)\r\n  61   58 1154 00007F78001A3960  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  62   44 1155 00007F7818063200  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  63   54 1156 00007F77F400BE10  1031220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  64   46 11ce 00007F77A81B5E80  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn (Threadpool Worker)\r\n  65   59 11cf 00007F78001B3FC0  1021220 Preemptive  0000000000000000:0000000000000000 00000000007134A0 1     Ukn (Threadpool Worker)\r\nXXXX   61    0 00007F77A0012DE0    31820 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\nXXXX   62    0 00007F77B80105E0    31820 Preemptive  0000000000000000:0000000000000000 00000000007134A0 0     Ukn\r\n(lldb)\r\n\r\n\r\n```"},{"Id":"6594034457","Type":"IssuesEvent","CreatedAt":"2017-09-15T05:48:09","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2063","RelatedDescription":"Closed issue \"RFC 8187 - Character Encoding for Headers\" (#2063) at aspnet/KestrelHttpServer","RelatedBody":"Hot off the presses (September 2017) https://tools.ietf.org/html/rfc8187\r\n\r\nIndicating Character Encoding and Language for HTTP Header Field Parameters\r\n\r\n/cc @Tratcher @blowdart @halter73 "},{"Id":"6593931093","Type":"IssuesEvent","CreatedAt":"2017-09-15T04:57:23","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2063","RelatedDescription":"Opened issue \"RFC 8187 - Character Encoding for Headers\" (#2063) at aspnet/KestrelHttpServer","RelatedBody":"Hot off the presses (September 2017) https://tools.ietf.org/html/rfc8187\r\n\r\nIndicating Character Encoding and Language for HTTP Header Field Parameters"},{"Id":"6593365800","Type":"IssuesEvent","CreatedAt":"2017-09-15T00:36:09","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2017","RelatedDescription":"Closed issue \"Merge code paths duplicated between HTTP/1.1 and HTTP/2\" (#2017) at aspnet/KestrelHttpServer","RelatedBody":"The initial HTTP/2 implementation contains a lot of duplicated code from the existing HTTP/1.1 stuff. That duplication should be eliminated so we can share as much code as possible between the two protocol implementations."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6597857930","Type":"IssuesEvent","CreatedAt":"2017-09-15T22:20:39","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1618","RelatedDescription":"Closed issue \"Port to 2.0.1: TagHelper error: A local or parameter named '__model' cannot be declared in this scope because that name is used in an enclosing local scope to define a local or parameter\" (#1618) at aspnet/Razor","RelatedBody":"Port this fix to 2.0.1: https://github.com/aspnet/Razor/issues/1614"},{"Id":"6597853248","Type":"PullRequestEvent","CreatedAt":"2017-09-15T22:18:52","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1687","RelatedDescription":"Merged pull request \"Port to 2.0.1: Fix ModelExpression's in section directive blocks.\" (#1687) at aspnet/Razor","RelatedBody":"Fixes #1618 \r\n\r\nPort of #1614 \r\n\r\nFrom @NTaylorMullen,\r\n- Changed `SectionDirectivePass` to move non-token body nodes from the original `DirectiveIntermediateNode` to the `SectionIntermediateNode`. By doing this there's no longer dual references of `SectionIntermediateNode` bodies.\r\n- Added MVC tests ~~for current and 1_X extensions~~."},{"Id":"6597671739","Type":"PullRequestEvent","CreatedAt":"2017-09-15T21:17:24","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1687","RelatedDescription":"Opened pull request \"Port to 2.0.1: Fix ModelExpression's in section directive blocks.\" (#1687) at aspnet/Razor","RelatedBody":"Fixes #1618 \r\n\r\nPort of #1614 \r\n\r\nFrom @NTaylorMullen,\r\n- Changed `SectionDirectivePass` to move non-token body nodes from the original `DirectiveIntermediateNode` to the `SectionIntermediateNode`. By doing this there's no longer dual references of `SectionIntermediateNode` bodies.\r\n- Added MVC tests for current and 1_X extensions."},{"Id":"6597496287","Type":"IssuesEvent","CreatedAt":"2017-09-15T20:28:28","Actor":"fmdufour","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1686","RelatedDescription":"Opened issue \"Error: Invalid name for a preprocessing symbol; '' is not a valid identifier\" (#1686) at aspnet/Razor","RelatedBody":"I have recently migrated from ASP.NET Core 1.1.X to ASP.NET Core 2,  when I run my app locally everything works just fine, but when running on Azure App Service I receive the following error on Razor Compilation:\r\n\r\n**An error occurred during the compilation of a resource required to process this request. Please review the following specific error details and modify your source code appropriately.**\r\n\r\nInvalid name for a preprocessing symbol; '' is not a valid identifier\r\n\r\nI tried to find a solution but couldn't find any,\r\nCan anyone help?\r\n\r\nThank you"},{"Id":"6597056341","Type":"IssuesEvent","CreatedAt":"2017-09-15T18:32:35","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1684","RelatedDescription":"Closed issue \"CompletionProvider causes VS crash in interactive window scenarios\" (#1684) at aspnet/Razor","RelatedBody":"See: https://github.com/dotnet/roslyn/issues/22128\r\n\r\nWe're missing a null check. The `context.Document.FilePath` will be null in some cases like interactive windows. We need to null-check everything we need to gracefully no-op."},{"Id":"6597056328","Type":"PullRequestEvent","CreatedAt":"2017-09-15T18:32:35","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1685","RelatedDescription":"Merged pull request \"Fix #1684 - CompletionProvider null ref\" (#1685) at aspnet/Razor","RelatedBody":"The CompletionProvider will be called in cases where the document\r\ndoesn't have a FilePath - such as the C# interactive window. This is\r\ncausing a null ref."},{"Id":"6597036369","Type":"PullRequestEvent","CreatedAt":"2017-09-15T18:27:40","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1685","RelatedDescription":"Opened pull request \"Fix #1684 - CompletionProvider null ref\" (#1685) at aspnet/Razor","RelatedBody":"The CompletionProvider will be called in cases where the document\r\ndoesn't have a FilePath - such as the C# interactive window. This is\r\ncausing a null ref."},{"Id":"6597015744","Type":"IssuesEvent","CreatedAt":"2017-09-15T18:22:41","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1684","RelatedDescription":"Opened issue \"CompletionProvider causes VS crash in interactive window scenarios\" (#1684) at aspnet/Razor","RelatedBody":"See: https://github.com/dotnet/roslyn/issues/22128\r\n\r\nWe're missing a null check. The `context.Document.FilePath` will be null in some cases like interactive windows. We need to null-check everything we need to gracefully no-op."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":25,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":196,"FavoriteCount":158,"RawContent":null},{"Id":"877222209667960834","CreatedAt":"2017-06-20T17:50:47+00:00","UserScreenname":"aspnet","Text":"Check out the latest Code Conversation episode where @LadyNaggaga chats with @BaggaJaspreet about ASPNet Core TagHe… https://t.co/xeyH9UaAso","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2017-09-18T05:45:45.943856Z","RunDurationInMilliseconds":5275}